#include "world_to_screen_point.h"
#include "../globals/globals.h"

vector2 world_to_screen_point(vector3 position) {
	int x, y;
	globals::engine->GetScreenSize(x, y);
	vector2 clientDimensions = { x, y };

	float* viewMatrix = globals::engine->WorldToScreenMatrix();

	vector4 clip_coords;
	clip_coords.x = (position.x * viewMatrix[0]) + (position.y * viewMatrix[1]) + (position.z * viewMatrix[2]) + viewMatrix[3];
	clip_coords.y = (position.x * viewMatrix[4]) + (position.y * viewMatrix[5]) + (position.z * viewMatrix[6]) + viewMatrix[7];
	clip_coords.z = (position.x * viewMatrix[8]) + (position.y * viewMatrix[9]) + (position.z * viewMatrix[10]) + viewMatrix[11];
	clip_coords.w = (position.x * viewMatrix[12]) + (position.y * viewMatrix[13]) + (position.z * viewMatrix[14]) + viewMatrix[15];

	if (clip_coords.w < 0.1f) {
		return { -1, -1 }; // Off screen.
	}

	vector3 NDC;
	NDC.x = clip_coords.x / clip_coords.w;
	NDC.y = clip_coords.y / clip_coords.w;
	NDC.z = clip_coords.z / clip_coords.w;

	float resX = (clientDimensions.x / 2 * NDC.x) + (NDC.x + clientDimensions.x / 2);
	float resY = -(clientDimensions.y / 2 * NDC.y) + (NDC.y + clientDimensions.y / 2);

	if (isnan(resX)) return { -1, -1 };

	return {
		resX,
		resY
	};
}