#include "get_valid_players.h"
#include "../classes/vengine/vengine.h"
#include "../classes/ventity_list/ventity_list.h"
#include "../globals/globals.h"

std::vector<player*> get_valid_players(/*bool include_local_player*/) {
    std::vector<player*> players = {};

	vengine* engine = globals::engine;
	ventity_list* entity_list = globals::entity_list;

	player* local_player = static_cast<player*>(entity_list->GetClientEntity(engine->GetLocalPlayer()));

	if (!local_player) return players;

    int local_team = local_player->get_team();

    /*if (include_local_player) {
        players.push_back(local_player);
    }*/

    for (int i = 1; i <= engine->GetMaxClients(); i++) {
        player* plr = static_cast<player*>(entity_list->GetClientEntity(i));
        if (!plr/* || plr->is_dormant()*/) continue;
        int health = plr->get_health();
        if (health == 0 || plr->get_team() == local_team) continue;

        players.push_back(plr);
    }

    return players;
}